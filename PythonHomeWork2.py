import random


"""
1. На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
Определите минимальное число монеток, которые нужно перевернуть, 
чтобы все монетки были повернуты вверх одной и той же стороной.

В первой строке входного файла INPUT.TXT записано натуральное число N (1 ≤ N ≤ 100) – число монеток. 
В каждой из последующих N строк содержится одно целое число – 1 если монетка лежит решкой вверх и 0 если вверх гербом.

В выходной файл OUTPUT.TXT выведите минимальное количество монет, которые нужно перевернуть
"""

print('\nРешение задачи 1:')

n = int(input('Введите количество монет: '))
coins = [random.randint(0, 1) for i in range(n)]
print(f'Список монет: {coins}')

count = 0

for i in coins:
    if i == 0:
        count += 1

print(f'Количество монет, которые нужно перевернуть {count}')


"""
2. Требуется посчитать сумму целых чисел, расположенных между числами 1 и N включительно.

В единственной строке входного файла INPUT.TXT записано единственное целое число N, 
не превышающее по абсолютной величине 10^4.

В единственную строку выходного файла OUTPUT.TXT нужно вывести одно целое число — сумму чисел, 
расположенных между 1 и N включительно.
"""

print('\nРешение задачи 2:')

n = int(input('Введите число N: '))
summ = 0

for i in range(1, n+1):
    summ += i

print(f'Сумма чисел от 1 до {n} -> {summ}')


"""
3. Требуется найти наименьший натуральный делитель целого числа N, отличный от 1.

Входной файл INPUT.TXT содержит целое число N (1 < N ≤ 106).

В выходной файл OUTPUT.TXT выведите ответ на задачу.
"""

print('\nРешение задачи 3:')

n = int(input('Введите число N: '))

min_divisor = n

for i in range(n-1, 1, -1):
    if not n % i:
        min_divisor = i

print(f'Наименьший делитель числа {n} -> {min_divisor}')


"""
4. Петя впервые пришел на урок физкультуры в новой школе. Перед началом урока ученики выстраиваются 
по росту, в порядке невозрастания. Напишите программу, которая определит на какое место в шеренге 
Пете нужно встать, чтобы не нарушить традицию, если заранее известен рост каждого ученика и эти 
данные уже расположены по невозрастанию (то есть каждое следующее число не больше предыдущего). 
Если в классе есть несколько учеников с таким же ростом, как у Пети, то программа должна расположить его после них.

Первая строка входного файла INPUT.TXT содержит натуральное число N (N ≤ 100) – количество учеников (не считая Петю). 
Во второй строке записаны N натуральных чисел Ai (Ai ≤ 200) – рост учеников в сантиметрах в порядке невозрастания. 
Третья строка содержит единственное натуральное число X (X ≤ 200) – рост Пети.

В выходной файл OUTPUT.TXT выведите единственное целое число – номер Пети в шеренге учеников.
"""

print('\nРешение задачи 4:')

count = int(input('Введите количество учеников (не считая Петю): '))
growth = [random.randint(150, 200) for i in range(count)]

for i in range(count):
    for j in range(count-1):
        if growth[j] < growth[j+1]:
            growth[j], growth[j+1] = growth[j+1], growth[j]

print(f'Ученики в порядке убывания -> {growth}')

piter = int(input('Введите рост Пети: '))

for i in range(count):
    if piter > growth[i]:
        print(f'Номер Пети в шеренге -> {i+1}')
        break
else:
    print(f'Номер Пети в шеренге -> {count+1}')
